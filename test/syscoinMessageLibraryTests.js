const SyscoinMessageLibraryForTests = artifacts.require('SyscoinMessageLibraryForTests');

contract('SyscoinMessageLibrary', (accounts) => {

  let syscoinMessageLibraryForTests;
  before(async () => {
    syscoinMessageLibraryForTests = await SyscoinMessageLibraryForTests.new();
  });
  it("flip32Bytes large number", async () => {
    const flipped = await syscoinMessageLibraryForTests.flip32BytesPublic.call("0x0102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f20");
    assert.equal(flipped.toString(16), "201f1e1d1c1b1a191817161514131211100f0e0d0c0b0a090807060504030201", "flip32Bytes not the expected one");
  });
  it("flip32Bytes short number", async () => {
    const flipped = await syscoinMessageLibraryForTests.flip32BytesPublic.call("0x0000000000000000000000000000000000000000000000000000000000001234");
    assert.equal(flipped.toString(16), "3412000000000000000000000000000000000000000000000000000000000000", "flip32Bytes is not the expected one");
  });
  it("target from bits 1", async () => {
    const target = await syscoinMessageLibraryForTests.targetFromBitsPublic.call("0x19015f53");
    assert.equal(target.toString(), "8614444778121073626993210829679478604092861119379437256704", "target is not the expected one");
  });
  it("target from bits 2", async () => {
    const target = await syscoinMessageLibraryForTests.targetFromBitsPublic.call("453281356");
    assert.equal(target.toString(16), "4864c000000000000000000000000000000000000000000000000", "target is not the expected one");
  });
  it("target from bits 3", async () => {
    const target = await syscoinMessageLibraryForTests.targetFromBitsPublic.call("0x1d00ffff"); // EASIEST_DIFFICULTY_TARGET
    maxTargetRounded = (Math.pow(2,16) - 1) * Math.pow(2,208);  // http://bitcoin.stackexchange.com/questions/8806/what-is-difficulty-and-how-it-relates-to-target
    assert.equal(target.toString(), maxTargetRounded, "target is not the expected one");
  });
  it("bytesToBytes32", async () => {
    const result = await syscoinMessageLibraryForTests.bytesToBytes32Public.call("0x0102030405060708090a0b0c0d0e0f000102030405060708090a0b0c0d0e0f00");
    assert.equal(result, "0x0102030405060708090a0b0c0d0e0f000102030405060708090a0b0c0d0e0f00", "converted bytes are not the expected ones");
  });
  it("bytesToUint32", async () => {
    const result = await syscoinMessageLibraryForTests.bytesToUint32Public.call("0x01020304");
    assert.equal(result.toNumber(), 16909060, "converted bytes are not the expected ones");
  });
  it("bytesToUint16", async () => {
    const result = await syscoinMessageLibraryForTests.bytesToUint16Public.call("0x0150");
    assert.equal(result.toNumber(), 336, "converted bytes are not the expected ones");
  });
  it("getEthReceipt position encoded value field", async () => {
    const receiptValue = "0xf902c0018305244ebf901b5f89b94fbf4411309e690a6209b7f0d70ea304f8b40ac20f863a0ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa0000000000000000000000000b0ea8c9ee8aa87efd28a12de8c034f947c144053a000000000000000000000000038945d8004cf4671c45686853452a6510812117ca00000000000000000000000000000000000000000000000000000000008f0d180f89b94fbf4411309e690a6209b7f0d70ea304f8b40ac20f863a08c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925a0000000000000000000000000b0ea8c9ee8aa87efd28a12de8c034f947c144053a000000000000000000000000038945d8004cf4671c45686853452a6510812117ca00000000000000000000000000000000000000000000000000000000000000000f8799438945d8004cf4671c45686853452a6510812117ce1a07def9f73ac6a7ac8fe4dc55f5257d48aed7e3f9d5247b0020598b87a5c369d82b840000000000000000000000000b0ea8c9ee8aa87efd28a12de8c034f947c1440530000000000000000000000000000000000000000000000000000000008f0d180";
    const txBytes = "0x067400000001013532f20fad408fb5beadaf4e2b4afbd86d12178d6a51ad4cec2ebc0f2fce93d20100000000feffffff020000000000000000fd2e076a4d2a07020150fd9e02f9029bf851a045a99ae455983d52604ee2a850ef7548b74ea118f1012297076dbb04b5348a0780808080808080a029cff91398b0056df3adfaa20bb49d3b416a0e69ee2c3117491ab36eca8465788080808080808080f8f180a082c0e775c7a55cd7dc0887cb15c90d760d994cd4d21fe26471164a9a1cc81161a034586b91f0fbbadaf00a6b3ffeeca8500255f6e8697f522a4c3c15c0f506c31ba0efdaeb23d58fcb4a52516e6856cb5cd9b19a5540cff4013a8f1e20b20ca51f5da00edb363b44a099c43f07c57083e05c5014ff4cbf2ea6ded88c009f12c8d0795ba0c3cdf1761eb751ff912eebb22b785e66976c159c193d7a4eb509e37d98c1bfc0a0595feaf2bbd299d9608f6c8533f9fbf0c34542ae423b35b8e89c432ea7645d61a07193d4763528c975c662910c5ca38424794bc8458e5102d8910f87e3edcbfab3808080808080808080f9015220b9014ef9014b8204ce843b9aca008307a1209438945d8004cf4671c45686853452a6510812117c80b8e45f959b690000000000000000000000000000000000000000000000000000000008f0d180000000000000000000000000000000000000000000000000000000002b7d3c01000000000000000000000000fbf4411309e690a6209b7f0d70ea304f8b40ac20000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000015002d68d3fe66b558010a3fa3ebf424bf1b8a59102400000000000000000000002ba01d91266755bdfe30c3b53a485afae06843bf21fb307b9f1947463002ce991f6ca06bdd1b6acc6016bf71e7ad4012e4e38d6552169e5d7148dbf0deca014794fd9e21a0f7b6f97b29bb3b107a1d1378f46f00750c4dacaa479369e4d599273ded5d98cd0105020150fd1304f90410f851a087ce28043d98064d651ec747b0ad1424857abda5ebe33cb512394893d0dacaa680808080808080a07965dbc2e42fbbaa7e6b24a3b93068513bea5a0c43a558dddefc2ae33b52f2898080808080808080f8f180a042f337f63d327f55f6c1498506df6bef6cc468107f163fcf9cb20d09a710ecf5a0991789340b01cd84de5499517a62d90a59eb0e44fe076be58b06704d87e0fbfaa0bd5a74c21752411a4442d5bbe4ffd0ecddcf3dee4a9b6166ee8e22b27fce0c7fa0ddf71b73d27d7bd2c06a734dda7505d590151177142905bf1169aed9cb09121da00b46675c3124c8235ba46d8d946f489f9e7e370b586edd3fdfa155cba6da02b0a0bad056ccfa51a0e98c05a8eaee60400170583e31b257bcf84b6db65db0a23e82a0ff2dcf5e1ec682c011fc64bce7e27b78061f2f899b2af4e8b3b9e0ef2ce2409b808080808080808080f902c720b902c3f902c0018305244ebf901b5f89b94fbf4411309e690a6209b7f0d70ea304f8b40ac20f863a0ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa0000000000000000000000000b0ea8c9ee8aa87efd28a12de8c034f947c144053a000000000000000000000000038945d8004cf4671c45686853452a6510812117ca00000000000000000000000000000000000000000000000000000000008f0d180f89b94fbf4411309e690a6209b7f0d70ea304f8b40ac20f863a08c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925a0000000000000000000000000b0ea8c9ee8aa87efd28a12de8c034f947c144053a000000000000000000000000038945d8004cf4671c45686853452a6510812117ca00000000000000000000000000000000000000000000000000000000000000000f8799438945d8004cf4671c45686853452a6510812117ce1a07def9f73ac6a7ac8fe4dc55f5257d48aed7e3f9d5247b0020598b87a5c369d82b840000000000000000000000000b0ea8c9ee8aa87efd28a12de8c034f947c1440530000000000000000000000000000000000000000000000000000000008f0d18021a06759019d118f4f19694ee8ed58167d2f460834bbb7dac5a0c5fd8ade3816e66f00a8ff530032401b060014ced26f5a296f082540c8f9cffee8015ecef6ad2c80d1f00800000000d40a9a3b00000000160014ced26f5a296f082540c8f9cffee8015ecef6ad2c02473044022034f3e994ff3c507217111664139236ec43a1b92895841cfffe91036afdb3018c022008bc2875f297bd9b2afa659db87af3b75a2a4d1f1845bc974b57c2e0b41f279a0121033e295585b49b152f0bdc61f10c8bfb6695d87e9eb7b1e1120ea2660b5d086cff00000000";
    const resultPos = await syscoinMessageLibraryForTests.getOpReturnPos.call(txBytes, 4);
    var pos = resultPos.toNumber();
    pos += 3; // skip pushdata2 + 2 bytes for opreturn varint
    
    const result = await syscoinMessageLibraryForTests.getEthReceipt.call(txBytes, pos);
    assert.equal(result.toString(), receiptValue, "converted receipt bytes are not the expected ones");
  });
  it("getEthReceipt receipt value non-encoded", async () => {
    const receiptValue = "0xf902c0018305244ebf901b5f89b94fbf4411309e690a6209b7f0d70ea304f8b40ac20f863a0ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa0000000000000000000000000b0ea8c9ee8aa87efd28a12de8c034f947c144053a000000000000000000000000038945d8004cf4671c45686853452a6510812117ca00000000000000000000000000000000000000000000000000000000008f0d180f89b94fbf4411309e690a6209b7f0d70ea304f8b40ac20f863a08c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925a0000000000000000000000000b0ea8c9ee8aa87efd28a12de8c034f947c144053a000000000000000000000000038945d8004cf4671c45686853452a6510812117ca00000000000000000000000000000000000000000000000000000000000000000f8799438945d8004cf4671c45686853452a6510812117ce1a07def9f73ac6a7ac8fe4dc55f5257d48aed7e3f9d5247b0020598b87a5c369d82b840000000000000000000000000b0ea8c9ee8aa87efd28a12de8c034f947c1440530000000000000000000000000000000000000000000000000000000008f0d180";
    const txBytes = "0x067400000001010d0e68ec4449bddd7e91c5b1eb5a2c793705769dce5e295e77624b6c0f3e0e610100000000feffffff020000000000000000fd3f0b6a4d3b0bfd4e01f9014b8204ce843b9aca008307a1209438945d8004cf4671c45686853452a6510812117c80b8e45f959b690000000000000000000000000000000000000000000000000000000008f0d180000000000000000000000000000000000000000000000000000000002b7d3c01000000000000000000000000fbf4411309e690a6209b7f0d70ea304f8b40ac20000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000015002d68d3fe66b558010a3fa3ebf424bf1b8a59102400000000000000000000002ba01d91266755bdfe30c3b53a485afae06843bf21fb307b9f1947463002ce991f6ca06bdd1b6acc6016bf71e7ad4012e4e38d6552169e5d7148dbf0deca014794fd9efd9e02f9029bf851a045a99ae455983d52604ee2a850ef7548b74ea118f1012297076dbb04b5348a0780808080808080a029cff91398b0056df3adfaa20bb49d3b416a0e69ee2c3117491ab36eca8465788080808080808080f8f180a082c0e775c7a55cd7dc0887cb15c90d760d994cd4d21fe26471164a9a1cc81161a034586b91f0fbbadaf00a6b3ffeeca8500255f6e8697f522a4c3c15c0f506c31ba0efdaeb23d58fcb4a52516e6856cb5cd9b19a5540cff4013a8f1e20b20ca51f5da00edb363b44a099c43f07c57083e05c5014ff4cbf2ea6ded88c009f12c8d0795ba0c3cdf1761eb751ff912eebb22b785e66976c159c193d7a4eb509e37d98c1bfc0a0595feaf2bbd299d9608f6c8533f9fbf0c34542ae423b35b8e89c432ea7645d61a07193d4763528c975c662910c5ca38424794bc8458e5102d8910f87e3edcbfab3808080808080808080f9015220b9014ef9014b8204ce843b9aca008307a1209438945d8004cf4671c45686853452a6510812117c80b8e45f959b690000000000000000000000000000000000000000000000000000000008f0d180000000000000000000000000000000000000000000000000000000002b7d3c01000000000000000000000000fbf4411309e690a6209b7f0d70ea304f8b40ac20000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000015002d68d3fe66b558010a3fa3ebf424bf1b8a59102400000000000000000000002ba01d91266755bdfe30c3b53a485afae06843bf21fb307b9f1947463002ce991f6ca06bdd1b6acc6016bf71e7ad4012e4e38d6552169e5d7148dbf0deca014794fd9e21a0f7b6f97b29bb3b107a1d1378f46f00750c4dacaa479369e4d599273ded5d98cd0105fdc302f902c0018305244ebf901b5f89b94fbf4411309e690a6209b7f0d70ea304f8b40ac20f863a0ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa0000000000000000000000000b0ea8c9ee8aa87efd28a12de8c034f947c144053a000000000000000000000000038945d8004cf4671c45686853452a6510812117ca00000000000000000000000000000000000000000000000000000000008f0d180f89b94fbf4411309e690a6209b7f0d70ea304f8b40ac20f863a08c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925a0000000000000000000000000b0ea8c9ee8aa87efd28a12de8c034f947c144053a000000000000000000000000038945d8004cf4671c45686853452a6510812117ca00000000000000000000000000000000000000000000000000000000000000000f8799438945d8004cf4671c45686853452a6510812117ce1a07def9f73ac6a7ac8fe4dc55f5257d48aed7e3f9d5247b0020598b87a5c369d82b840000000000000000000000000b0ea8c9ee8aa87efd28a12de8c034f947c1440530000000000000000000000000000000000000000000000000000000008f0d180fd1304f90410f851a087ce28043d98064d651ec747b0ad1424857abda5ebe33cb512394893d0dacaa680808080808080a07965dbc2e42fbbaa7e6b24a3b93068513bea5a0c43a558dddefc2ae33b52f2898080808080808080f8f180a042f337f63d327f55f6c1498506df6bef6cc468107f163fcf9cb20d09a710ecf5a0991789340b01cd84de5499517a62d90a59eb0e44fe076be58b06704d87e0fbfaa0bd5a74c21752411a4442d5bbe4ffd0ecddcf3dee4a9b6166ee8e22b27fce0c7fa0ddf71b73d27d7bd2c06a734dda7505d590151177142905bf1169aed9cb09121da00b46675c3124c8235ba46d8d946f489f9e7e370b586edd3fdfa155cba6da02b0a0bad056ccfa51a0e98c05a8eaee60400170583e31b257bcf84b6db65db0a23e82a0ff2dcf5e1ec682c011fc64bce7e27b78061f2f899b2af4e8b3b9e0ef2ce2409b808080808080808080f902c720b902c3f902c0018305244ebf901b5f89b94fbf4411309e690a6209b7f0d70ea304f8b40ac20f863a0ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa0000000000000000000000000b0ea8c9ee8aa87efd28a12de8c034f947c144053a000000000000000000000000038945d8004cf4671c45686853452a6510812117ca00000000000000000000000000000000000000000000000000000000008f0d180f89b94fbf4411309e690a6209b7f0d70ea304f8b40ac20f863a08c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925a0000000000000000000000000b0ea8c9ee8aa87efd28a12de8c034f947c144053a000000000000000000000000038945d8004cf4671c45686853452a6510812117ca00000000000000000000000000000000000000000000000000000000000000000f8799438945d8004cf4671c45686853452a6510812117ce1a07def9f73ac6a7ac8fe4dc55f5257d48aed7e3f9d5247b0020598b87a5c369d82b840000000000000000000000000b0ea8c9ee8aa87efd28a12de8c034f947c1440530000000000000000000000000000000000000000000000000000000008f0d18021a06759019d118f4f19694ee8ed58167d2f460834bbb7dac5a0c5fd8ade3816e66f00a8ff53000c7f2e27001447314e644d681ba36d79e541ded7a73f074b265d80d1f0080000000080b9993b0000000016001447314e644d681ba36d79e541ded7a73f074b265d0247304402203ccfa7ffd7987dc9cf13214ec8e6fa5cc9ffb91e44d70a1a54654f25bf6ff0ba022039d595eb84ab6522a1784a20cdea1bf6adbb6444019af26dc1014479e371fcf701210348efe6431378340a7cbd3163527386be8071f96421ac333d7f4d5e01a27b476600000000";
    const resultPos = await syscoinMessageLibraryForTests.getOpReturnPos.call(txBytes, 4);
    var pos = resultPos.toNumber();
    pos += 3; // skip pushdata2 + 2 bytes for opreturn varint
    
    const result = await syscoinMessageLibraryForTests.getEthReceipt.call(txBytes, pos);
    assert.equal(result.toString(), receiptValue, "converted receipt bytes are not the expected ones");
  });
  it('Merkle solidity', async () => {

    const oneHash = [
      "0x57a8a9a8de6131bf61f5d385318c10e29a5d826eed6adbdbeedc3a0539908ed4"
    ];
    const twoHashes = [
      "0x2e6e9539f02088efe5abb7082bb6e8ba8df68e1cca543af48f5cc93523bf7209",
      "0x5db4c5556edb6dffe30eb26811327678a54f74b7a3072f2834472ea30ee17360"
    ];
    const threeHashes = [
      "0x6bbe42a26ec5af04eb16da92131ddcd87df55d629d940eaa8f88c0ceb0b9ede6",
      "0xc2213074ba6cf84780030f9dc261fa31999c039811516aaf0fb8fd1e1a9fa0c3",
      "0xde3d260197746a0b509ffa4e05cc8b042f0a0ce472c20d75e17bf58815d395e1"
    ];
    const manyHashes = [
      "0xb2d645742da1443e2439dfe1ee5901aa74680ddd2f11be203595673be5cfc396",
      "0x75520841e64a8acdd669e453d0a55caa7082a35ec6406cf5e73b30cdf34ad0b6",
      "0x6a4a7fdf807e56a39ca842d3e3807e6639af4cf1d05cf6da6154a0b5170f7690",
      "0xde3d260197746a0b509ffa4e05cc8b042f0a0ce472c20d75e17bf58815d395e1",
      "0x6bbe42a26ec5af04eb16da92131ddcd87df55d629d940eaa8f88c0ceb0b9ede6",
      "0x50ab8816b4a1ffa5700ff26bb1fbacce5e3cb93978e57410cfabbe8819a45a4e",
      "0x2e6e9539f02088efe5abb7082bb6e8ba8df68e1cca543af48f5cc93523bf7209",
      "0x57a8a9a8de6131bf61f5d385318c10e29a5d826eed6adbdbeedc3a0539908ed4",
      "0xceace0419d93c9789498de2ed1e75db53143b730f18cff88660297759c719231",
      "0x0ce3bcd684f4f795e549a2ddd1f4c539e8d80813b232a448c56d6b28b74fe3ed",
      "0x5db4c5556edb6dffe30eb26811327678a54f74b7a3072f2834472ea30ee17360",
      "0x03d7be19e9e961691712fde9fd87b706c7d0768a207b84ef6ad1f81ffa90dec5",
      "0x8e5e221b22795d96d3de1cad930d7b131f37b6b9dfcccd3f745b08e6900ef1bd",
      "0xc2213074ba6cf84780030f9dc261fa31999c039811516aaf0fb8fd1e1a9fa0c3",
      "0x38d3dffed604f5a160b327ecde5147eb1aa46e3d154b98644cd2a39f0f9ab915"
    ]

    let hash;
    hash = await syscoinMessageLibraryForTests.makeMerklePublic.call(oneHash);
    assert.equal(hash, "0x57a8a9a8de6131bf61f5d385318c10e29a5d826eed6adbdbeedc3a0539908ed4", 'One hash array');
    hash = await syscoinMessageLibraryForTests.makeMerklePublic.call(twoHashes);
    assert.equal(hash, "0xae1c24c61efe6b378017f6055b891dd62747deb23a7939cffe78002f1cfb79ab", 'Two hashes array');
    hash = await syscoinMessageLibraryForTests.makeMerklePublic.call(threeHashes);
    assert.equal(hash, "0xe1c52ec93d4f4f83783aeede9e6b84b5ded007ec9591b521d6e5e4b6d9512d43", 'Three hashes array');
    hash = await syscoinMessageLibraryForTests.makeMerklePublic.call(manyHashes);
    assert.equal(hash, "0xee712eefe9b4c9ecd39a71d45e975b83c9427070e54953559e78f45d2cbb03b3", 'Many hashes array');
  });
});