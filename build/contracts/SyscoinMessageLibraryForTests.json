{
  "contractName": "SyscoinMessageLibraryForTests",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_rawBytes",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "pos",
          "type": "uint256"
        }
      ],
      "name": "bytesToBytes32",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "input",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "pos",
          "type": "uint256"
        }
      ],
      "name": "bytesToUint16",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "result",
          "type": "uint16"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "input",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "pos",
          "type": "uint256"
        }
      ],
      "name": "bytesToUint32",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "result",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "input",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "pos",
          "type": "uint256"
        }
      ],
      "name": "bytesToUint32Flipped",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "result",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "input",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "pos",
          "type": "uint256"
        }
      ],
      "name": "bytesToUint64",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "result",
          "type": "uint64"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_txHash",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_txIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "_siblings",
          "type": "uint256[]"
        }
      ],
      "name": "computeMerkle",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_dataBytes",
          "type": "bytes"
        }
      ],
      "name": "dblShaFlip",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_rawBytes",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "offset",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "len",
          "type": "uint256"
        }
      ],
      "name": "dblShaFlipMem",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_input",
          "type": "uint256"
        }
      ],
      "name": "flip32Bytes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "result",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "logValues",
          "type": "bytes"
        }
      ],
      "name": "getBridgeTransactionId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "pos",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bits",
          "type": "uint256"
        }
      ],
      "name": "getBytesLE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "result",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "txBytes",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "pos",
          "type": "uint256"
        }
      ],
      "name": "getEthReceipt",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_blockHeader",
          "type": "bytes"
        }
      ],
      "name": "getHeaderMerkleRoot",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "ethTxReceipt",
          "type": "bytes"
        },
        {
          "internalType": "bytes32",
          "name": "expectedTopic",
          "type": "bytes32"
        }
      ],
      "name": "getLogValuesForTopic",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "txBytes",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "pos",
          "type": "uint256"
        }
      ],
      "name": "getOpReturnPos",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "hashes",
          "type": "bytes32[]"
        }
      ],
      "name": "makeMerkle",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "minProposalDeposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "txBytes",
          "type": "bytes"
        }
      ],
      "name": "parseBurnTx",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "txBytes",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "pos",
          "type": "uint256"
        }
      ],
      "name": "parseVarInt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_rawBytes",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "offset",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "len",
          "type": "uint256"
        }
      ],
      "name": "sha256mem",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "result",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_rawBytes",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "offset",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_endIndex",
          "type": "uint256"
        }
      ],
      "name": "sliceArray",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_bits",
          "type": "uint32"
        }
      ],
      "name": "targetFromBits",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.13+commit.5b0b510c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_rawBytes\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"pos\",\"type\":\"uint256\"}],\"name\":\"bytesToBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"input\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"pos\",\"type\":\"uint256\"}],\"name\":\"bytesToUint16\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"result\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"input\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"pos\",\"type\":\"uint256\"}],\"name\":\"bytesToUint32\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"result\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"input\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"pos\",\"type\":\"uint256\"}],\"name\":\"bytesToUint32Flipped\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"result\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"input\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"pos\",\"type\":\"uint256\"}],\"name\":\"bytesToUint64\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"result\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_txHash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_txIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"_siblings\",\"type\":\"uint256[]\"}],\"name\":\"computeMerkle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_dataBytes\",\"type\":\"bytes\"}],\"name\":\"dblShaFlip\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_rawBytes\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"len\",\"type\":\"uint256\"}],\"name\":\"dblShaFlipMem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_input\",\"type\":\"uint256\"}],\"name\":\"flip32Bytes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"logValues\",\"type\":\"bytes\"}],\"name\":\"getBridgeTransactionId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"pos\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bits\",\"type\":\"uint256\"}],\"name\":\"getBytesLE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"txBytes\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"pos\",\"type\":\"uint256\"}],\"name\":\"getEthReceipt\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_blockHeader\",\"type\":\"bytes\"}],\"name\":\"getHeaderMerkleRoot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"ethTxReceipt\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"expectedTopic\",\"type\":\"bytes32\"}],\"name\":\"getLogValuesForTopic\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"txBytes\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"pos\",\"type\":\"uint256\"}],\"name\":\"getOpReturnPos\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"hashes\",\"type\":\"bytes32[]\"}],\"name\":\"makeMerkle\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minProposalDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"txBytes\",\"type\":\"bytes\"}],\"name\":\"parseBurnTx\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"txBytes\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"pos\",\"type\":\"uint256\"}],\"name\":\"parseVarInt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_rawBytes\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"len\",\"type\":\"uint256\"}],\"name\":\"sha256mem\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"result\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_rawBytes\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endIndex\",\"type\":\"uint256\"}],\"name\":\"sliceArray\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_bits\",\"type\":\"uint32\"}],\"name\":\"targetFromBits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"getBridgeTransactionId(bytes)\":{\"params\":{\"logValues\":\"log values\"},\"return\":\"bridgeTransactionId\"},\"getEthReceipt(bytes,uint256)\":{\"params\":{\"pos\":\"position at where to start parsing\",\"txBytes\":\"syscoin raw transaction\"},\"return\":\"ethTxReceipt ethereum tx receipt\"},\"getLogValuesForTopic(bytes,bytes32)\":{\"params\":{\"ethTxReceipt\":\"ethereum transaction receipt\"},\"return\":\"logs bloom\"}}},\"userdoc\":{\"methods\":{\"getBridgeTransactionId(bytes)\":{\"notice\":\"Get bridgeTransactionId from logs bloom\"},\"getEthReceipt(bytes,uint256)\":{\"notice\":\"Parse txBytes and returns ethereum tx receipt\"},\"getLogValuesForTopic(bytes,bytes32)\":{\"notice\":\"Return logs for given ethereum transaction receipt\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/jsidhu/Documents/GitHub/sysethereum-contracts1/contracts/SyscoinParser/SyscoinMessageLibraryForTests.sol\":\"SyscoinMessageLibraryForTests\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/jsidhu/Documents/GitHub/sysethereum-contracts1/contracts/SyscoinErrorCodes.sol\":{\"keccak256\":\"0x12a46196c0c375270326067ffc4efad3d2c291a8b8028213171218c13e6c6e77\",\"urls\":[\"bzz-raw://de875bce465ae7c7d8a610b1cda9b89bac58c4929e8dfb4eedd4de30503bfe1e\",\"dweb:/ipfs/QmepvgntV2tw89njZEShDcgV61FwCwjKaJux96A46shKu3\"]},\"/Users/jsidhu/Documents/GitHub/sysethereum-contracts1/contracts/SyscoinParser/SyscoinMessageLibrary.sol\":{\"keccak256\":\"0xc1ef79a457ee3825f1e5a901df4b7cb3c9f84413141beb42f4c9c43f5d161394\",\"urls\":[\"bzz-raw://085b5d3bd0f974ab32e54492d20c5917f9be02ceb8de7aa090c175907bff200c\",\"dweb:/ipfs/QmZxrDFvvc6cgpt9SFpEJ8CHK5db8U7R8oR24U351DAWgm\"]},\"/Users/jsidhu/Documents/GitHub/sysethereum-contracts1/contracts/SyscoinParser/SyscoinMessageLibraryForTests.sol\":{\"keccak256\":\"0xd1dab051aa21563a5daf73d05ce16317c9e004fb848a792e1e2667b1c2e78896\",\"urls\":[\"bzz-raw://e031f695d3f939e98ede646f4e573416732edaf6a9099799e39f938140b7eb16\",\"dweb:/ipfs/QmdBMTqHYqhtSUvP9itebeUP9bZLfVM2Q48Fp3GdKM3st8\"]},\"solidity-rlp/contracts/RLPReader.sol\":{\"keccak256\":\"0xe2df62ba34ab569e097c58eee30eb9fdab120d4df1c572c6ceae1bec3faa2c2a\",\"urls\":[\"bzz-raw://46988aac4691b498d4c6983c7617de6d29cd5d7fe4e3ecfb7f8c0d00e33e9a12\",\"dweb:/ipfs/QmdWF9ti9UJSP2E7XYkdUPRV9yfmxEmuRgzpNtt3Ex57Ar\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "178:8743:6:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;178:8743:6;;;;;;;",
  "deployedSourceMap": "178:8743:6:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;178:8743:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9899:501:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9899:501:5;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;9899:501:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;9899:501:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;9899:501:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;9899:501:5;;-1:-1:-1;;9899:501:5;;;-1:-1:-1;9899:501:5;;-1:-1:-1;;9899:501:5:i;:::-;;;;;;;;;;;;;;;;;;;11509:227;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11509:227:5;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;11509:227:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;11509:227:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;11509:227:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;11509:227:5;;-1:-1:-1;;11509:227:5;;;-1:-1:-1;;;11509:227:5;;;;:::i;:::-;;;;;;;;;;;;;;;;10765:562;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10765:562:5;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;10765:562:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;10765:562:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;10765:562:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;10765:562:5;;-1:-1:-1;;10765:562:5;;;-1:-1:-1;;;10765:562:5;;;;:::i;20519:460::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;20519:460:5;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;20519:460:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;20519:460:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;20519:460:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;20519:460:5;;-1:-1:-1;;20519:460:5;;;-1:-1:-1;;;20519:460:5;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;20519:460:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4088:61:4;;;:::i;18308:177:5:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;18308:177:5;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;18308:177:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;18308:177:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;18308:177:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;18308:177:5;;-1:-1:-1;;18308:177:5;;;-1:-1:-1;18308:177:5;;-1:-1:-1;;18308:177:5:i;:::-;;;;;;;;;;;;;;;;;;;11742:417;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11742:417:5;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;11742:417:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;11742:417:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;11742:417:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;11742:417:5;;-1:-1:-1;;11742:417:5;;;-1:-1:-1;11742:417:5;;-1:-1:-1;;11742:417:5:i;:::-;;;;;;;;;;;;;;;;;;;506:580;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;506:580:5;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;506:580:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;506:580:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;506:580:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;506:580:5;;-1:-1:-1;;506:580:5;;;-1:-1:-1;506:580:5;;-1:-1:-1;;506:580:5:i;:::-;;;;;;;;;;;;;;;;;;;;;;;18080:222;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;18080:222:5;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;18080:222:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;18080:222:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;18080:222:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;18080:222:5;;-1:-1:-1;;18080:222:5;;;-1:-1:-1;18080:222:5;;-1:-1:-1;;18080:222:5:i;8958:233::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8958:233:5;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;8958:233:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;8958:233:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;8958:233:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;8958:233:5;;-1:-1:-1;8958:233:5;;-1:-1:-1;;;;;8958:233:5:i;10582:177::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10582:177:5;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;10582:177:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;10582:177:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;10582:177:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;10582:177:5;;-1:-1:-1;10582:177:5;;-1:-1:-1;;;;;10582:177:5:i;16969:238::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16969:238:5;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;16969:238:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;16969:238:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;16969:238:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;16969:238:5;;-1:-1:-1;16969:238:5;;-1:-1:-1;;;;;16969:238:5:i;12618:1816::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12618:1816:5;;:::i;18491:1635::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;18491:1635:5;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;18491:1635:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;18491:1635:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;18491:1635:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;18491:1635:5;;-1:-1:-1;;18491:1635:5;;;-1:-1:-1;18491:1635:5;;-1:-1:-1;;18491:1635:5:i;6435:1458::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6435:1458:5;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;6435:1458:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6435:1458:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;6435:1458:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;6435:1458:5;;-1:-1:-1;;6435:1458:5;;;-1:-1:-1;6435:1458:5;;-1:-1:-1;;6435:1458:5:i;15771:946::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15771:946:5;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;15771:946:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;15771:946:5;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;15771:946:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;15771:946:5;;-1:-1:-1;15771:946:5;;-1:-1:-1;;;;;15771:946:5:i;1134:259::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1134:259:5;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;1134:259:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1134:259:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1134:259:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;1134:259:5;;-1:-1:-1;;1134:259:5;;;-1:-1:-1;;;1134:259:5;;;;:::i;1632:823::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1632:823:5;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;1632:823:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1632:823:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1632:823:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;1632:823:5;;-1:-1:-1;1632:823:5;;-1:-1:-1;;;;;1632:823:5:i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;1632:823:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17495:196;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;17495:196:5;;;;:::i;14616:759::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14616:759:5;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;14616:759:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14616:759:5;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;14616:759:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;14616:759:5;;-1:-1:-1;14616:759:5;;-1:-1:-1;;;;;14616:759:5:i;8056:763::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8056:763:5;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;8056:763:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;8056:763:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;8056:763:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;8056:763:5;;-1:-1:-1;;8056:763:5;;;-1:-1:-1;8056:763:5;;-1:-1:-1;;8056:763:5:i;12165:257::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12165:257:5;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;12165:257:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;12165:257:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;12165:257:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;12165:257:5;;-1:-1:-1;;12165:257:5;;;-1:-1:-1;12165:257:5;;-1:-1:-1;;12165:257:5:i;9899:501::-;10004:13;10096:3;10089:4;10082:5;10078:16;10074:26;10068:33;10132:4;10126:11;10180:4;10177:1;10172:13;10168:1;10162:4;10158:12;10150:36;10229:4;10226:1;10221:13;10217:1;10211:4;10207:12;10199:36;10278:4;10275:1;10270:13;10266:1;10260:4;10256:12;10248:36;10327:4;10324:1;10319:13;10315:1;10309:4;10305:12;10297:36;10372:11;10360:10;10356:28;;10042:352;-1:-1:-1;;;;10042:352:5:o;11509:227::-;11624:4;11651:78;11668:59;11692:33;11702:9;11713:6;11721:3;11692:9;:33::i;:::-;11675:51;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;11675:51:5;;;11668:59;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;11668:59:5;;;;;;;-1:-1:-1;263:2;;-1:-1;;11668:59:5;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11668:59:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;11668:59:5;11651:11;:78::i;:::-;11644:85;11509:227;-1:-1:-1;;;;11509:227:5:o;10765:562::-;10876:14;11132:4;11126:11;11227:4;11222:3;11217;11208:6;11201:4;11190:9;11186:20;11182:33;11176:4;11171:3;11160:72;11150:2;;11262:1;11259;11252:12;11150:2;11301:10;;10915:406;-1:-1:-1;;;;10915:406:5:o;20519:460::-;20613:12;20637:8;20660:6;20648:9;:18;20637:29;;20676:19;20708:3;20698:14;;;;;;;;;;;;;;;;;;;;;;;;;21:6:-1;;104:10;20698:14:5;87:34:-1;135:17;;-1:-1;20698:14:5;;20676:36;;20890:3;20883:4;20875:6;20871:17;20866:3;20857:6;20850:4;20839:9;20835:20;20831:33;20825:4;20820:3;20809:85;20799:2;;20924:1;20921;20914:12;20799:2;20966:6;20519:460;-1:-1:-1;;;;;20519:460:5:o;4088:61:4:-;4130:19;4088:61;:::o;18308:177:5:-;18382:13;18459:5;18465:3;18459:10;;;;;;;;;;;;;;;;18453:17;;18446:25;;18473:4;18446:32;18429:5;18435:3;18439:1;18435:5;18429:12;;;;;;;;;;;;;;18416:62;;18308:177;-1:-1:-1;;;18308:177:5:o;11742:417::-;11816:13;12132:5;12138:3;12132:10;;;;;;;;;;;;;;;;12126:17;;12119:25;;12146:5;12119:33;12092:5;12098:3;12104:1;12098:7;12092:14;;;;;;;;;;;;;;;;12086:21;;12079:29;;12110:5;12079:37;12052:5;12058:3;12064:1;12058:7;12052:14;;;;;;;;;;;;;;;;12046:21;;12039:29;;12070:5;12039:37;12012:5;12018:3;12024:1;12018:7;12012:14;;;;;;;;;;;;;;;;12006:21;;11999:29;;-1:-1:-1;;;11999:37:5;11972:5;11978:3;11984:1;11978:7;11972:14;;;;;;;;;;;;;;;;11966:21;;11959:29;;11990:5;11959:37;11932:5;11938:3;11944:1;11938:7;11932:14;;;;;;;;;;;;;;;;11926:21;;11919:29;;11950:5;11919:37;11893:5;11899:3;11905:1;11899:7;11893:14;;;;;;;;;;;;;;;;11887:21;;11880:29;;11911:4;11880:36;11863:5;11869:3;11873:1;11869:5;11863:12;;;;;;;;;;;;;;11850:66;:106;:146;:186;:226;:266;:302;;11742:417;-1:-1:-1;;;11742:417:5:o;506:580::-;580:4;586;660:10;679:7;687:3;679:12;;;;;;;;;;;;709:1;702:8;;;;;679:12;;;-1:-1:-1;746:4:5;739:11;;735:345;;;766:18;;;-1:-1:-1;780:3:5;;-1:-1:-1;766:18:5;;735:345;805:4;:12;;813:4;805:12;801:279;;;841:28;852:7;861:3;866:2;841:10;:28::i;:::-;871:3;877:1;871:7;833:46;;;;;;;801:279;900:4;:12;;908:4;900:12;896:184;;;936:28;947:7;956:3;961:2;936:10;:28::i;:::-;966:3;972:1;966:7;928:46;;;;;;;896:184;995:4;:12;;1003:4;995:12;991:89;;;1031:28;1042:7;1051:3;1056:2;1031:10;:28::i;:::-;1061:3;1067:1;1061:7;1023:46;;;;;;;991:89;506:580;;;;;;;:::o;18080:222::-;18235:30;;;18254:4;18235:30;18229:37;18080:222;;;;;:::o;8958:233::-;9159:14;9144:30;9138:37;;9115:70::o;10582:177::-;10648:4;10671:81;10688:62;10712:36;10736:10;10719:28;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;10719:28:5;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;10719:28:5;;;10712:36;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;10712:36:5;;;;;;;-1:-1:-1;263:2;;-1:-1;;10712:36:5;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10712:36:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10712:36:5;10695:54;;;10712:36;10695:54;;;;;;;;;26:21:-1;;;22:32;;6:49;;10695:54:5;;;;;;;10688:62;;10695:54;;;;10688:62;;;;;10695:54;10688:62;66:2:-1;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;10671:81:5;10664:88;;10582:177;;;;:::o;16969:238::-;17122:32;;;17116:39;17046:4;;17181:19;17116:39;17181:11;:19::i;:::-;17174:26;16969:238;-1:-1:-1;;;16969:238:5:o;12618:1816::-;12736:4;12730:11;12673;;12775:16;;;12730:11;12754:38;12835:6;12831:2;12826:16;12822:1;12817:3;12813:11;12805:38;12886:6;12882:2;12877:16;12873:1;12868:3;12864:11;12856:38;12937:6;12933:2;12928:16;12924:1;12919:3;12915:11;12907:38;12988:6;12984:2;12979:16;12975:1;12970:3;12966:11;12958:38;13039:6;13035:2;13030:16;13026:1;13021:3;13017:11;13009:38;13090:6;13086:2;13081:16;13077:1;13072:3;13068:11;13060:38;13141:6;13137:2;13132:16;13128:1;13123:3;13119:11;13111:38;13192:6;13188:2;13183:16;13179:1;13174:3;13170:11;13162:38;13243:6;13239:2;13234:16;13230:1;13225:3;13221:11;13213:38;13295:6;13291:2;13286:16;13281:2;13276:3;13272:12;13264:39;13347:6;13343:2;13338:16;13333:2;13328:3;13324:12;13316:39;13399:6;13395:2;13390:16;13385:2;13380:3;13376:12;13368:39;13451:6;13447:2;13442:16;13437:2;13432:3;13428:12;13420:39;13503:6;13499:2;13494:16;13489:2;13484:3;13480:12;13472:39;13555:6;13551:2;13546:16;13541:2;13536:3;13532:12;13524:39;13607:6;13603:2;13598:16;13593:2;13588:3;13584:12;13576:39;13659:6;13655:2;13650:16;13645:2;13640:3;13636:12;13628:39;13711:6;13707:2;13702:16;13697:2;13692:3;13688:12;13680:39;13763:6;13759:2;13754:16;13749:2;13744:3;13740:12;13732:39;13815:6;13811:2;13806:16;13801:2;13796:3;13792:12;13784:39;13867:6;13863:2;13858:16;13853:2;13848:3;13844:12;13836:39;13918:6;13915:1;13910:15;13905:2;13900:3;13896:12;13888:38;13969:6;13966:1;13961:15;13956:2;13951:3;13947:12;13939:38;14020:6;14017:1;14012:15;14007:2;14002:3;13998:12;13990:38;14071:6;14068:1;14063:15;14058:2;14053:3;14049:12;14041:38;14122:6;14119:1;14114:15;14109:2;14104:3;14100:12;14092:38;14173:6;14170:1;14165:15;14160:2;14155:3;14151:12;14143:38;14224:6;14221:1;14216:15;14211:2;14206:3;14202:12;14194:38;14275:6;14272:1;14267:15;14262:2;14257:3;14253:12;14245:38;14326:6;14323:1;14318:15;14313:2;14308:3;14304:12;14296:38;14377:6;14374:1;14369:15;14364:2;14359:3;14355:12;14347:38;14408:10;;12705:1723;-1:-1:-1;;12705:1723:5:o;18491:1635::-;18568:4;18584:13;18607:15;18632:17;18659:14;18702:25;18714:7;18723:3;18702:11;:25::i;:::-;18684:43;-1:-1:-1;18684:43:5;-1:-1:-1;18806:16:5;18803:323;;18855:25;18867:7;18876:3;18855:11;:25::i;:::-;18837:43;-1:-1:-1;18837:43:5;-1:-1:-1;18910:16:5;18902:91;;;;-1:-1:-1;;;18902:91:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19090:25;19102:7;19111:3;19090:11;:25::i;:::-;19072:43;-1:-1:-1;19072:43:5;-1:-1:-1;18803:323:5;19154:3;19143:8;:14;19135:94;;;;-1:-1:-1;;;19135:94:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19245:6;19240:207;19261:8;19257:1;:12;19240:207;;;19297:2;19290:9;;;;19351:25;19363:7;19372:3;19351:11;:25::i;:::-;19390:21;;19410:1;19390:21;;-1:-1:-1;19331:45:5;-1:-1:-1;19271:3:5;;19240:207;;;;19484:25;19496:7;19505:3;19484:11;:25::i;:::-;19465:44;-1:-1:-1;19465:44:5;-1:-1:-1;19539:2:5;19527:14;;19519:95;;;;-1:-1:-1;;;19519:95:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19629:6;19624:418;19645:9;19641:1;:13;19624:418;;;19682:1;19675:8;;;;19739:25;19751:7;19760:3;19739:11;:25::i;:::-;19719:45;-1:-1:-1;19719:45:5;-1:-1:-1;19782:24:5;19793:7;19719:45;19782:10;:24::i;:::-;19778:172;;19858:17;;;;19908:1;;-1:-1:-1;19927:8:5;;19778:172;20006:1;19999:8;;;;20028:3;20021:10;;;;;;;;;19624:418;19656:3;;19624:418;;;;20051:68;;-1:-1:-1;;;20051:68:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6435:1458;6591:12;;;6601:1;6591:12;;;;;;;;;6535;;6687:25;6699:7;6708:3;6687:11;:25::i;:::-;6722:18;;;-1:-1:-1;6666:46:5;-1:-1:-1;6804:25:5;6816:7;6722:18;6804:11;:25::i;:::-;6839:18;;;-1:-1:-1;6783:46:5;-1:-1:-1;6914:25:5;6926:7;6839:18;6914:11;:25::i;:::-;6949:18;;;-1:-1:-1;6893:46:5;-1:-1:-1;7024:25:5;7036:7;6949:18;7024:11;:25::i;:::-;7059:18;;;-1:-1:-1;7003:46:5;-1:-1:-1;7139:25:5;7151:7;7059:18;7139:11;:25::i;:::-;7118:46;-1:-1:-1;7118:46:5;-1:-1:-1;7310:1:5;7295:16;;7292:566;;;7326:22;7351:27;7365:7;7374:3;7351:13;:27::i;:::-;7392:18;;;;7326:52;-1:-1:-1;7486:25:5;7498:7;7392:18;7486:11;:25::i;:::-;7525:22;;;;;;;-1:-1:-1;7465:46:5;;-1:-1:-1;7576:59:5;;7587:7;;7525:22;;7606:27;;7601:33;;7576:10;:59::i;:::-;7561:74;;7292:566;;;;7800:41;7811:7;7820:3;7829:11;7825:3;:15;7800:10;:41::i;:::-;7785:56;;7292:566;-1:-1:-1;7874:12:5;6435:1458;-1:-1:-1;;;6435:1458:5:o;15771:946::-;15927:16;;15893:4;;;15969:94;15985:6;15981:1;:10;15969:94;;;16027:25;16039:9;16049:1;16039:12;;;;;;;;;;;;;;16027:11;:25::i;:::-;16012:9;16022:1;16012:12;;;;;;;;;;;;;;;;;:40;15993:3;;15969:94;;;-1:-1:-1;16077:1:5;;16106:20;16118:7;16106:11;:20::i;:::-;16088:38;;16145:525;16156:6;16152:1;:10;16145:525;;;16178:13;16194:9;16204:1;16194:12;;;;;;;;;;;;;;16178:28;;16221:9;16244:10;16283:1;16272:8;:12;;;;;;16288:1;16272:17;16268:248;;;-1:-1:-1;16367:8:5;;-1:-1:-1;16401:10:5;16268:248;;;-1:-1:-1;16457:10:5;;-1:-1:-1;16493:8:5;16268:248;16547:63;16571:37;16595:4;16601:5;16578:29;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;16578:29:5;;;16571:37;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;16571:37:5;;;;;;;-1:-1:-1;263:2;;-1:-1;;16571:37:5;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16571:37:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;16571:37:5;16554:55;;;16571:37;16554:55;;;;;;;;;26:21:-1;;;22:32;;6:49;;16554:55:5;;;;;;;16547:63;;16554:55;;;;16547:63;;;;;16554:55;16547:63;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;16547:63:5;;;;;;;-1:-1:-1;263:2;;-1:-1;;16547:63:5;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16547:63:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;16547:63:5;;-1:-1:-1;16638:1:5;16626:13;;;;16658:1;16653:6;;;;16145:525;;;;;;16687:23;16699:10;16687:11;:23::i;:::-;16680:30;15771:946;-1:-1:-1;;;;;;;15771:946:5:o;1134:259::-;1239:14;;1269:118;1300:1;1293:4;:8;1289:1;:12;1269:118;;;1370:1;1374;1370:5;1364:1;:12;1346:4;1357:1;1351:3;:7;1346:13;;;;;;;;;;;;;;1332:44;1322:54;;;;;1303:3;;1269:118;;1632:823;1720:4;;;;;;;;;;;;;1979:34;2000:7;1720:4;1979:20;:34::i;:::-;1969:44;-1:-1:-1;2026:57:5;;;389:6;2026:57;2023:181;;-1:-1:-1;266:5:5;;-1:-1:-1;2124:12:5;;-1:-1:-1;2138:18:5;;-1:-1:-1;2158:9:5;;-1:-1:-1;2169:9:5;;-1:-1:-1;2180:12:5;;-1:-1:-1;2098:95:5;;-1:-1:-1;2098:95:5;2023:181;2219:26;2234:7;2243:1;2219:14;:26::i;:::-;2213:32;;2328:30;2345:7;2354:3;2328:16;:30::i;:::-;2255:103;;;;;;;;;;;;;;;;;;;;2376:1;2379:12;2393:18;2413:9;2424;2435:12;2368:80;;;;;;;;;;;;;;;;;;;;;;1632:823;;;;;;;;:::o;17495:196::-;17638:8;17630:16;;17589:9;17581:17;;;;;17570:28;;;-1:-1:-1;;17676:7:5;17670:3;:14;17663:21;;17495:196::o;14616:759::-;14715:13;;14682:7;;14753:1;14743:11;;14739:33;;;14763:6;14770:1;14763:9;;;;;;;;;;;;;;14756:16;;;;;14739:33;14799:1;14790:6;:10;14782:42;;;;;-1:-1:-1;;;14782:42:5;;;;;;;;;;;;-1:-1:-1;;;14782:42:5;;;;;;;;;;;;;;;14835:6;14851:103;14867:6;14863:1;:10;14851:103;;;14914:28;14931:6;14938:1;14931:9;;;;;;;;;;;;;;14926:15;;14914:11;:28::i;:::-;14906:37;;14894:6;14901:1;14894:9;;;;;;;;;;;;;;;;;:49;14875:3;;14851:103;;;14964:6;14980;14997:318;15013:1;15004:6;:10;14997:318;;;-1:-1:-1;15034:1:5;;-1:-1:-1;15034:1:5;15049:232;15065:6;15061:1;:10;15049:232;;;15112:6;15104:1;15108;15104:5;:14;15103:37;;15139:1;15130:6;:10;15103:37;;;15122:1;15126;15122:5;15103:37;15099:41;;15170:72;15194:46;15218:6;15225:1;15218:9;;;;;;;;;;;;;;15229:6;15236:1;15229:9;;;;;;;;;;;;;;15201:38;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;15201:38:5;;;15194:46;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;15194:46:5;;;;;;;-1:-1:-1;263:2;;-1:-1;;15194:46:5;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15194:46:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;15194:46:5;15177:64;;;15194:46;15177:64;;;;;;;;;26:21:-1;;;22:32;;6:49;;15177:64:5;;;;;;;15170:72;;15177:64;;;;15170:72;;;;;15177:64;15170:72;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;15170:72:5;;;;;;;-1:-1:-1;263:2;;-1:-1;;15170:72:5;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15170:72:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;15170:72:5;15158:9;;:6;;15165:1;;15158:9;;;;;;;;;;;;;;;:84;15078:1;15073:6;;;;;15265:1;15260:6;15049:232;;;15303:1;15294:10;;14997:318;;;15339:28;15356:6;15363:1;15356:9;;;;;;;15339:28;15331:37;14616:759;-1:-1:-1;;;;;;14616:759:5:o;8056:763::-;8181:12;8209:43;8255:33;:24;:12;:22;:24::i;:::-;:31;:33::i;:::-;8209:79;;8298:35;8336:28;:16;8353:1;8336:19;;;;;;;;;;;;;;:26;:28::i;:::-;8298:66;-1:-1:-1;8379:9:5;8374:404;8398:8;:15;8394:1;:19;8374:404;;;8434:30;8467:20;:8;8476:1;8467:11;;;;;;;:20;8434:53;;8501:21;8525:16;:3;8529:1;8525:6;;;;;;;;;;;;;;:14;:16::i;:::-;8501:40;;8555:13;8571:27;8586:8;8596:1;8571:14;:27::i;:::-;8555:43;;8659:13;8650:5;:22;8646:122;;;8737:16;:3;8741:1;8737:6;;;;;;;:16;8730:23;;;;;;;;;;8646:122;-1:-1:-1;;;8415:3:5;;8374:404;;;-1:-1:-1;8787:25:5;;;-1:-1:-1;;;8787:25:5;;;;;;;;;;;;-1:-1:-1;;;8787:25:5;;;;;;;;;;;;;;12165:257;12239:13;12395:5;12401:3;12395:10;;;;;;;;;;;;;;;;12389:17;;12382:25;;12409:5;12382:33;12355:5;12361:3;12367:1;12361:7;12355:14;;;;;;;;;;;;;;;;12349:21;;12342:29;;12373:5;12342:37;12316:5;12322:3;12328:1;12322:7;12316:14;;;;;;;;;;;;;;;;12310:21;;12303:29;;12334:4;12303:36;12286:5;12292:3;12296:1;12292:5;12286:12;;;;;;;;;;;;;;12273:66;:106;:142;;12165:257;-1:-1:-1;;;12165:257:5:o;4578:200::-;4745:12;;4652:4;;-1:-1:-1;;;4761:10:5;4745:7;;4753:3;;4745:12;;;;;;;;;;-1:-1:-1;;;;;;4745:12:5;:26;;-1:-1:-1;4578:200:5;;;;:::o;4884:1329::-;4988:4;4994:7;5003:6;5011:5;5018:7;5041:16;5067:26;5103:20;5133:17;5160:15;5185:8;5235:23;5245:7;5254:3;5235:9;:23::i;:::-;5223:35;-1:-1:-1;5223:35:5;-1:-1:-1;5323:4:5;5317:10;;;;5309:19;;;;;;5350:27;5364:7;5373:3;5350:13;:27::i;:::-;5338:39;;5394:2;5387:9;;;;;;5436:23;5446:7;5455:3;5436:9;:23::i;:::-;5424:35;-1:-1:-1;5424:35:5;-1:-1:-1;5483:4:5;5477:10;;;;5469:19;;;;;;5513:27;5527:7;5536:3;5513:13;:27::i;:::-;5498:42;;;;5557:2;5550:9;;;;;;5613:23;5623:7;5632:3;5613:9;:23::i;:::-;5601:35;-1:-1:-1;5601:35:5;-1:-1:-1;5720:4:5;5714:10;;;;5706:19;;;;;;5756:33;5776:7;5785:3;5756:19;:33::i;:::-;5735:54;;5806:2;5799:9;;;;;;5851:23;5861:7;5870:3;5851:9;:23::i;:::-;5839:35;-1:-1:-1;5839:35:5;-1:-1:-1;5898:4:5;5892:10;;;;5884:19;;;;;;5931:7;5939:3;5931:12;;;;;;;;;;;;5925:19;5954:9;;;;;;;5931:12;;;-1:-1:-1;6009:23:5;6019:7;5954:9;6009;:23::i;:::-;5997:35;-1:-1:-1;5997:35:5;-1:-1:-1;6056:4:5;6050:10;;;;6042:19;;;;;;6086:33;6106:7;6115:3;6086:19;:33::i;:::-;6137:12;;6151:18;;-1:-1:-1;6171:9:5;;-1:-1:-1;6171:9:5;-1:-1:-1;6137:12:5;-1:-1:-1;4884:1329:5;;-1:-1:-1;;;;;4884:1329:5:o;1446:218:22:-;1507:14;;:::i;:::-;-1:-1:-1;1629:28:22;;;;;;;;;1637:11;;1629:28;;1597:4;1587:15;;;1629:28;;;;1446:218;;;:::o;2443:508::-;2503:16;2539:12;2546:4;2539:6;:12::i;:::-;2531:21;;;;;;2563:10;2576:14;2585:4;2576:8;:14::i;:::-;2563:27;;2600:23;2640:5;2626:20;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2600:46;;2657:11;2685:27;2700:4;:11;;;2685:14;:27::i;:::-;2671:11;;;;:41;;-1:-1:-1;2722:12:22;;2744:177;2765:5;2761:1;:9;2744:177;;;2801:19;2813:6;2801:11;:19::i;:::-;2791:29;;2846:24;;;;;;;;2854:7;2846:24;;;;2863:6;2846:24;;;2834:6;2841:1;2834:9;;;;;;;;;;;;;;;;;:36;2894:16;;;;2772:3;;2744:177;;;-1:-1:-1;2938:6:22;;2443:508;-1:-1:-1;;;;;2443:508:22:o;5222:431::-;5315:8;;5283:12;;5307:21;;;;;;5339:11;5353:27;5368:4;:11;;;5353:14;:27::i;:::-;5401:8;;5465:14;;;5401:17;;;;5465:14;;;-1:-1:-1;;5465:14:22;;;;;;;;;;;5339:41;;-1:-1:-1;5443:19:22;;5401:17;5465:14;;;;;;;21:6:-1;;104:10;5465:14:22;87:34:-1;135:17;;-1:-1;5465:14:22;;5443:36;;5490:12;5556:6;5550:4;5546:17;5535:28;;5583:40;5602:6;5588:4;:11;;;:20;5610:7;5619:3;5583:4;:40::i;:::-;-1:-1:-1;5640:6:22;5222:431;-1:-1:-1;;;;5222:431:22:o;9569:207:5:-;9666:5;9673:4;9707:7;:14;9701:3;:20;9693:29;;;;;;9746:7;9754:3;9746:12;;;;;;;;;;;;;;;-1:-1:-1;;9767:1:5;9761:7;;9569:207;;;;;:::o;9256:271::-;9445:26;9462:2;9445:26;9439:33;;9256:271::o;3055:330:22:-;3135:8;;3115:4;;3131:31;;-1:-1:-1;3157:5:22;3150:12;;3131:31;3208:11;;;;3269:13;;3173:11;3261:22;;279:4;3307:24;;3303:54;;;3352:5;3345:12;;;;;;3303:54;-1:-1:-1;3374:4:22;;3055:330;-1:-1:-1;;;3055:330:22:o;5759:410::-;5840:8;;5820:4;;5836:27;;-1:-1:-1;5862:1:22;5855:8;;5836:27;5874:10;5887:1;5874:14;;5898:12;5927:27;5942:4;:11;;;5927:14;:27::i;:::-;5913:11;;;;5992:8;;5913:41;;;;-1:-1:-1;5978:22:22;6010:130;6027:6;6017:7;:16;6010:130;;;6068:20;6080:7;6068:11;:20::i;:::-;6122:7;;;;;6058:30;;;;6010:130;;;-1:-1:-1;6157:5:22;;5759:410;-1:-1:-1;;;5759:410:22:o;7558:538::-;7693:13;;7617:4;;7685:22;;187:4;7731:26;;7727:362;;;7779:1;7772:8;;;;;7727:362;233:4;7799:25;;;:83;;-1:-1:-1;279:4:22;7829:25;;;;;:52;;-1:-1:-1;325:4:22;7858:23;;7829:52;7795:294;;;7903:1;7896:8;;;;;7795:294;279:4;7923:24;;7919:170;;;-1:-1:-1;;7987:35:22;;-1:-1:-1;7980:42:22;;7919:170;-1:-1:-1;;8056:33:22;;-1:-1:-1;8049:40:22;;6218:1288;6372:13;;6274:4;;;;6364:22;;187:4;6410:26;;6406:1069;;;6460:1;6450:11;;6406:1069;;;233:4;6489:25;;6485:990;;;-1:-1:-1;;6538:30:22;;;-1:-1:-1;6485:990:22;;;279:4;6588:24;;6584:891;;;6681:4;6674:5;6670:16;6760:1;6752:6;6748:14;6738:24;;6915:7;6911:2;6907:16;6902:3;6898:26;6889:6;6883:13;6879:46;7012:1;7003:7;6999:15;6990:7;6986:29;6975:40;;6637:392;;;;;325:4;7058:23;;7054:421;;;-1:-1:-1;;7107:28:22;;;-1:-1:-1;7054:421:22;;;7229:4;7222:5;7218:16;7273:1;7265:6;7261:14;7251:24;;7344:7;7340:2;7336:16;7331:3;7327:26;7318:6;7312:13;7308:46;7448:1;7439:7;7435:15;7426:7;7422:29;7411:40;;7185:280;;;-1:-1:-1;7492:7:22;6218:1288;-1:-1:-1;;6218:1288:22:o;8250:697::-;8322:8;8318:21;;8332:7;;8318:21;8396:194;362:2;8403:16;;8396:194;;8493:10;;8480:24;;362:2;8532:16;;;;8562:17;;;;-1:-1:-1;;8421:16:22;8396:194;;;8772:10;;8843:11;;362:2;8700:15;;;8692:3;:24;-1:-1:-1;;8692:28:22;8784:9;;8768:26;;;8839:22;;8909:21;8896:35;;8739:202;;;;:::o;178:8743:6:-;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.13;\n\nimport './SyscoinMessageLibrary.sol';\nimport '../SyscoinErrorCodes.sol';\n// @dev - Manages a battle session between superblock submitter and challenger\ncontract SyscoinMessageLibraryForTests is SyscoinErrorCodes, SyscoinMessageLibrary {\n\n//     function bytesToUint32Public(bytes memory input) public pure returns (uint32 result) {\n//         return bytesToUint32(input, 0);\n//     }\n\n//     function bytesToBytes32Public(bytes memory b) public pure returns (bytes32) {\n//         return bytesToBytes32(b, 0);\n//     }\n//     function bytesToUint16Public(bytes memory input) public pure returns (uint32 result) {\n//         return bytesToUint16(input, 0);\n//     }\n//     function sliceArrayPublic(bytes memory _rawBytes, uint offset, uint _endIndex) public view returns (bytes memory) {\n//         uint len = _endIndex - offset;\n//         bytes memory result = new bytes(len);\n//         assembly {\n//             // Call precompiled contract to copy data\n//             if iszero(staticcall(gas, 0x04, add(add(_rawBytes, 0x20), offset), len, add(result, 0x20), len)) {\n//                 revert(0, 0)\n//             }\n//         }\n//         return result;\n//     }\n\n//     function targetFromBitsPublic(uint32 _bits) public pure returns (uint) {\n//         uint exp = _bits / 0x1000000;  // 2**24\n//         uint mant = _bits & 0xffffff;\n//         return mant * 256**(exp - 3);\n//     }\n\n//     function makeMerklePublic(bytes32[] memory hashes2) public pure returns (bytes32) {\n//         return SyscoinMessageLibrary.makeMerkle(hashes2);\n//     }\n\n//     function flip32BytesPublic(uint input) public pure returns (uint) {\n//         return SyscoinMessageLibrary.flip32Bytes(input);\n//     }\n\n//     // @dev - Converts a bytes of size 4 to uint32,\n//     // e.g. for input [0x01, 0x02, 0x03 0x04] returns 0x01020304\n//     function bytesToUint32(bytes memory input, uint pos) private pure returns (uint32 result) {\n//         result = uint32(uint8(input[pos]))*(2**24) + uint32(uint8(input[pos + 1]))*(2**16) + uint32(uint8(input[pos + 2]))*(2**8) + uint32(uint8(input[pos + 3]));\n//     }\n\n//     // @dev converts bytes of any length to bytes32.\n//     // If `_rawBytes` is longer than 32 bytes, it truncates to the 32 leftmost bytes.\n//     // If it is shorter, it pads with 0s on the left.\n//     // Should be private, made internal for testing\n//     //\n//     // @param _rawBytes - arbitrary length bytes\n//     // @return - leftmost 32 or less bytes of input value; padded if less than 32\n//     function bytesToBytes32(bytes memory _rawBytes, uint pos) private pure returns (bytes32) {\n//         bytes32 out;\n//         assembly {\n//             out := mload(add(add(_rawBytes, 0x20), pos))\n//         }\n//         return out;\n//     }\n\n//     function parseTransaction(bytes memory txBytes) public pure\n//              returns (uint, uint, address, uint32, uint8, address) {\n//         return SyscoinMessageLibrary.parseTransaction(txBytes);\n//     }\n//     // Returns true if the tx output is an OP_RETURN output\n//     function isOpReturn(bytes memory txBytes, uint pos) public pure\n//              returns (bool) {\n//         // scriptPub format is\n//         // 0x6a OP_RETURN\n//         return \n//             txBytes[pos] == byte(0x6a);\n//     }  \n//     function getOpReturnPos(bytes memory txBytes, uint pos) public pure returns (uint) {\n//         uint n_inputs;\n//         uint script_len;\n//         uint output_value;\n//         uint n_outputs;\n\n//         (n_inputs, pos) = SyscoinMessageLibrary.parseVarInt(txBytes, pos);\n//         // if dummy 0x00 is present this is a witness transaction\n//         if(n_inputs == 0x00){\n//             (n_inputs, pos) = SyscoinMessageLibrary.parseVarInt(txBytes, pos); // flag\n//             require(n_inputs != 0x00, \"#SyscoinSuperblocks getOpReturnPos(): Unexpected dummy/flag\");\n//             // after dummy/flag the real var int comes for txins\n//             (n_inputs, pos) = SyscoinMessageLibrary.parseVarInt(txBytes, pos);\n//         }\n//         require(n_inputs < 100, \"#SyscoinSuperblocks getOpReturnPos(): Incorrect size of n_inputs\");\n\n//         for (uint i = 0; i < n_inputs; i++) {\n//             pos += 36;  // skip outpoint\n//             (script_len, pos) = SyscoinMessageLibrary.parseVarInt(txBytes, pos);\n//             pos += script_len + 4;  // skip sig_script, seq\n//         }\n        \n//         (n_outputs, pos) = SyscoinMessageLibrary.parseVarInt(txBytes, pos);\n//         require(n_outputs < 10, \"#SyscoinSuperblocks getOpReturnPos(): Incorrect size of n_outputs\");\n//         for (uint i = 0; i < n_outputs; i++) {\n//             pos += 8;\n//             // varint\n//             (script_len, pos) = SyscoinMessageLibrary.parseVarInt(txBytes, pos);\n//             if(!isOpReturn(txBytes, pos)){\n//                 // output script\n//                 pos += script_len;\n//                 output_value = 0;\n//                 continue;\n//             }\n//             // skip opreturn marker\n//             pos += 1;\n//             return pos;\n//         }\n//         revert(\"#SyscoinSuperblocks getOpReturnPos(): No OpReturn found\");\n//     }\n//     function bytesToUint16(bytes memory input, uint pos) public pure returns (uint16 result) {\n//         result = uint16(uint8(input[pos+1])) + uint16(uint8(input[pos]))*(2**8);\n//     }\n//     /**\n//      * Parse txBytes and returns ethereum tx receipt\n//      * @param txBytes syscoin raw transaction\n//      * @param pos position at where to start parsing\n//      * @return ethTxReceipt ethereum tx receipt\n//      */\n//     function getEthReceipt(bytes memory txBytes, uint pos)\n//         public\n//         returns (bytes memory)\n//     {\n//         bytes memory ethTxReceipt = new bytes(0);\n//         uint bytesToRead;\n//         // skip vchTxValue\n//         (bytesToRead, pos) = SyscoinMessageLibrary.parseVarInt(txBytes, pos);\n//         pos += bytesToRead;\n//         // skip vchTxParentNodes\n//         (bytesToRead, pos) = SyscoinMessageLibrary.parseVarInt(txBytes, pos);\n//         pos += bytesToRead;\n//         // skip vchTxRoot\n//         (bytesToRead, pos) = SyscoinMessageLibrary.parseVarInt(txBytes, pos);\n//         pos += bytesToRead;\n//         // skip vchTxPath\n//         (bytesToRead, pos) = SyscoinMessageLibrary.parseVarInt(txBytes, pos);\n//         pos += bytesToRead;\n//         // get vchReceiptValue\n//         (bytesToRead, pos) = SyscoinMessageLibrary.parseVarInt(txBytes, pos);\n//         // if position is encoded in receipt value, decode position and read the value from next field (parent nodes)\n//         if(bytesToRead == 2){\n//             uint16 positionOfValue = bytesToUint16(txBytes, pos);\n//             pos += bytesToRead;\n//             // get vchReceiptParentNodes\n//             (bytesToRead, pos) = SyscoinMessageLibrary.parseVarInt(txBytes, pos);\n//             pos += positionOfValue;\n//             ethTxReceipt = sliceArrayPublic(txBytes, pos, pos+(bytesToRead-positionOfValue));\n//         }\n//         // size > 2 means receipt value is fully serialized in this field and no need to get parent nodes field\n//         else{\n//             ethTxReceipt = sliceArrayPublic(txBytes, pos, pos+bytesToRead);      \n//         }\n//         return ethTxReceipt;\n//     }\n//     //\n//     // Error / failure codes\n//     //\n\n//     // error codes for storeBlockHeader\n//     uint constant ERR_DIFFICULTY =  10010;  // difficulty didn't match current difficulty\n//     uint constant ERR_RETARGET = 10020;  // difficulty didn't match retarget\n//     uint constant ERR_NO_PREV_BLOCK = 10030;\n//     uint constant ERR_BLOCK_ALREADY_EXISTS = 10040;\n//     uint constant ERR_INVALID_HEADER = 10050;\n//     uint constant ERR_COINBASE_INDEX = 10060; // coinbase tx index within Bitcoin merkle isn't 0\n//     uint constant ERR_NOT_MERGE_MINED = 10070; // trying to check AuxPoW on a block that wasn't merge mined\n//     uint constant ERR_FOUND_TWICE = 10080; // 0xfabe6d6d found twice\n//     uint constant ERR_NO_MERGE_HEADER = 10090; // 0xfabe6d6d not found\n//     uint constant ERR_NOT_IN_FIRST_20 = 10100; // chain Merkle root not within first 20 bytes of coinbase tx\n//     uint constant ERR_CHAIN_MERKLE = 10110;\n//     uint constant ERR_PARENT_MERKLE = 10120;\n//     uint constant ERR_PROOF_OF_WORK = 10130;\n//     uint constant ERR_INVALID_HEADER_HASH = 10140;\n//     uint constant ERR_PROOF_OF_WORK_AUXPOW = 10150;\n//     uint constant ERR_PARSE_TX_OUTPUT_LENGTH = 10160;\n//     uint constant ERR_PARSE_TX_SYS = 10170;\n\n//     // error codes for verifyTx\n//     uint constant ERR_BAD_FEE = 20010;\n//     uint constant ERR_CONFIRMATIONS = 20020;\n//     uint constant ERR_CHAIN = 20030;\n//     uint constant ERR_SUPERBLOCK = 20040;\n//     uint constant ERR_MERKLE_ROOT = 20050;\n//     uint constant ERR_TX_64BYTE = 20060;\n\n//     // error codes for relayTx\n//     uint constant ERR_RELAY_VERIFY = 30010;\n}",
  "sourcePath": "/Users/jsidhu/Documents/GitHub/sysethereum-contracts1/contracts/SyscoinParser/SyscoinMessageLibraryForTests.sol",
  "ast": {
    "absolutePath": "/Users/jsidhu/Documents/GitHub/sysethereum-contracts1/contracts/SyscoinParser/SyscoinMessageLibraryForTests.sol",
    "exportedSymbols": {
      "SyscoinMessageLibraryForTests": [
        6745
      ]
    },
    "id": 6746,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6738,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:6"
      },
      {
        "absolutePath": "/Users/jsidhu/Documents/GitHub/sysethereum-contracts1/contracts/SyscoinParser/SyscoinMessageLibrary.sol",
        "file": "./SyscoinMessageLibrary.sol",
        "id": 6739,
        "nodeType": "ImportDirective",
        "scope": 6746,
        "sourceUnit": 6737,
        "src": "26:37:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jsidhu/Documents/GitHub/sysethereum-contracts1/contracts/SyscoinErrorCodes.sol",
        "file": "../SyscoinErrorCodes.sol",
        "id": 6740,
        "nodeType": "ImportDirective",
        "scope": 6746,
        "sourceUnit": 4994,
        "src": "64:34:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6741,
              "name": "SyscoinErrorCodes",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4993,
              "src": "220:17:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SyscoinErrorCodes_$4993",
                "typeString": "contract SyscoinErrorCodes"
              }
            },
            "id": 6742,
            "nodeType": "InheritanceSpecifier",
            "src": "220:17:6"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6743,
              "name": "SyscoinMessageLibrary",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6736,
              "src": "239:21:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SyscoinMessageLibrary_$6736",
                "typeString": "contract SyscoinMessageLibrary"
              }
            },
            "id": 6744,
            "nodeType": "InheritanceSpecifier",
            "src": "239:21:6"
          }
        ],
        "contractDependencies": [
          4993,
          6736
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 6745,
        "linearizedBaseContracts": [
          6745,
          6736,
          4993
        ],
        "name": "SyscoinMessageLibraryForTests",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 6746,
        "src": "178:8743:6"
      }
    ],
    "src": "0:8921:6"
  },
  "legacyAST": {
    "absolutePath": "/Users/jsidhu/Documents/GitHub/sysethereum-contracts1/contracts/SyscoinParser/SyscoinMessageLibraryForTests.sol",
    "exportedSymbols": {
      "SyscoinMessageLibraryForTests": [
        6745
      ]
    },
    "id": 6746,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6738,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:6"
      },
      {
        "absolutePath": "/Users/jsidhu/Documents/GitHub/sysethereum-contracts1/contracts/SyscoinParser/SyscoinMessageLibrary.sol",
        "file": "./SyscoinMessageLibrary.sol",
        "id": 6739,
        "nodeType": "ImportDirective",
        "scope": 6746,
        "sourceUnit": 6737,
        "src": "26:37:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jsidhu/Documents/GitHub/sysethereum-contracts1/contracts/SyscoinErrorCodes.sol",
        "file": "../SyscoinErrorCodes.sol",
        "id": 6740,
        "nodeType": "ImportDirective",
        "scope": 6746,
        "sourceUnit": 4994,
        "src": "64:34:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6741,
              "name": "SyscoinErrorCodes",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4993,
              "src": "220:17:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SyscoinErrorCodes_$4993",
                "typeString": "contract SyscoinErrorCodes"
              }
            },
            "id": 6742,
            "nodeType": "InheritanceSpecifier",
            "src": "220:17:6"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6743,
              "name": "SyscoinMessageLibrary",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6736,
              "src": "239:21:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SyscoinMessageLibrary_$6736",
                "typeString": "contract SyscoinMessageLibrary"
              }
            },
            "id": 6744,
            "nodeType": "InheritanceSpecifier",
            "src": "239:21:6"
          }
        ],
        "contractDependencies": [
          4993,
          6736
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 6745,
        "linearizedBaseContracts": [
          6745,
          6736,
          4993
        ],
        "name": "SyscoinMessageLibraryForTests",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 6746,
        "src": "178:8743:6"
      }
    ],
    "src": "0:8921:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.13+commit.5b0b510c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.19",
  "updatedAt": "2019-12-11T00:04:06.600Z",
  "devdoc": {
    "methods": {
      "getBridgeTransactionId(bytes)": {
        "params": {
          "logValues": "log values"
        },
        "return": "bridgeTransactionId"
      },
      "getEthReceipt(bytes,uint256)": {
        "params": {
          "pos": "position at where to start parsing",
          "txBytes": "syscoin raw transaction"
        },
        "return": "ethTxReceipt ethereum tx receipt"
      },
      "getLogValuesForTopic(bytes,bytes32)": {
        "params": {
          "ethTxReceipt": "ethereum transaction receipt"
        },
        "return": "logs bloom"
      }
    }
  },
  "userdoc": {
    "methods": {
      "getBridgeTransactionId(bytes)": {
        "notice": "Get bridgeTransactionId from logs bloom"
      },
      "getEthReceipt(bytes,uint256)": {
        "notice": "Parse txBytes and returns ethereum tx receipt"
      },
      "getLogValuesForTopic(bytes,bytes32)": {
        "notice": "Return logs for given ethereum transaction receipt"
      }
    }
  }
}